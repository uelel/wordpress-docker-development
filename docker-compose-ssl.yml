version: '3'

services:
  wp:
    container_name: ${APP_NAME}-wp
    build:
      context: ./.docker/wordpress
      dockerfile: Dockerfile # install the wp-cli that is missing from the official image
    ports:
      - 8080:80
    volumes:
      - ./wp-app:/var/www/html # Full wordpress project
      #- ./plugin-name/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
      #- ./theme-name/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}"
      WORDPRESS_DEBUG: true
    depends_on:
      - db
    links:
      - db

  proxy:
    container_name: ${APP_NAME}-proxy
    image: nginx:stable
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./wp-app:/var/www/html
      # nginx config file
      - ./.docker/nginx/:/etc/nginx/conf.d
      # SSL certificates
      - ./.docker/nginx/certs:/etc/nginx/certs
    depends_on:
      - wp
    links:
      - wp

  db:
    container_name: ${APP_NAME}-db
    image: mysql:latest # https://hub.docker.com/_/mysql/ - or mariadb https://hub.docker.com/_/mariadb
    # platform: linux/x86_64  # Uncomment if your machine is running on arm (ex: Apple Silicon processor)
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ./wp-data:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"

volumes:
  wp-app:
  db_data:

networks:
  wp:
   name: ${APP_NAME}